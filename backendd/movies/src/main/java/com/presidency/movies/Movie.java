package com.presidency.movies;

// these three are Lombok annotations to reduce boilerplate code.
import lombok.AllArgsConstructor; //creates a constructor with all fields.
import lombok.Data; //generates getters, setters, equals, hashCode, and toString.
import lombok.NoArgsConstructor; // creates a default constructor (no arguments).

import org.bson.types.ObjectId; //Imports MongoDB’s ObjectId, used for the primary key _id.
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document; //tells Spring this class should be stored as a MongoDB document.
import org.springframework.data.mongodb.core.mapping.DocumentReference; //is used to reference another MongoDB collection (in this case, reviews).

import java.util.List; //This allows usage of List data type for fields like genres, backdrops, and reviews.

// Class Declaration and Annotations
@Document(collection = "movies") // means this class maps to the "movies" collection in MongoDB.
@Data
@AllArgsConstructor
@NoArgsConstructor
public class    Movie {
    @Id
    private ObjectId id; //Marks id as the primary key, auto-generated by MongoDB.
    private String imdbId;
    private String title;
    private String releaseDate;
    private String trailerLink;
    private String poster;
    //These are lists of strings:
    //
    //genres could be ["Action", "Drama"]
    //
    //backdrops are URLs for background images
    private List<String> genres;
    private List<String> backdrops;
    //This is a reference to another MongoDB collection.
    //
    //It links this movie to multiple reviews.allowing a relational-like structure between movies and reviews.
    @DocumentReference
    private List<Review> reviewIds;

    public Movie(String imdbId, String title, String releaseDate, String trailerLink, String poster, List<String> backdrops, List<String> genres) {
        this.imdbId = imdbId;
        this.title = title;
        this.releaseDate = releaseDate;
        this.trailerLink = trailerLink;
        this.poster = poster;
        this.backdrops = backdrops;
        this.genres = genres;
    }
}

//“ Movies model class represents a document in the movies MongoDB collection. It includes fields like IMDb ID, title, release date, genres, and media links. It uses Lombok to reduce boilerplate, and MongoDB annotations to map data properly. The class also references reviews through the @DocumentReference annotation, allowing a relational-like structure between movies and reviews.
